---
title: "Modele"

output: html_document
---

```{r message=FALSE, warning=FALSE}
library(rstanarm)
load("modele.Rdata")
```

Ostatecznie są trzy modele. 

# 1

Model mający przwidywać drift rate. Oparty na naszym założeniu,że tylko P300 powinno przeiwdywać drift rate. 

Definicja modelu:
model_p300 <- stan_lmer(v ~ (P300_within + P300_within + P300_lat_within + P300_lat_between)* Group * Side * Prym * Con + (1 |ID), data = all, cores = 8,chains = 8)

Nie ma dowodów na zależnośc. Żeby obejrzeć sobie wyniki należy wpisać do konsoli:

launch_shinystan(model_p300)

# 2

Model mający przwidywać nondecision time. Oparty na naszym założeniu,że n2pc i P300 powinno przeiwdywać nondecision time.

Definicja modelu:


model_n2pc <- stan_lmer(t0 ~ (n2pc_within + n2pc_between + P300_within +P300_between + P300_lat_within + P300_between)* Group *  Prym *Con  + (1 |ID), data = all, cores = 8,chains = 8)

Nie ma dowodów na zależnośc n2pc i t0, ale jest zależność pomiędzy t0 i P300. Żeby obejrzeć sobie wyniki należy wpisać do konsoli:

launch_shinystan(model_n2pc)

#3

Model jak wyżej zredukowany o n2pc. 

Definicja modelu:

model_P300_t0 <- stan_lmer(t0 ~ (P300_within + P300_between + P300_lat_within + P300_lat_between)* Group *  Prym * Side*Con  + (1 |ID), data = all, cores = 8,chains = 8)


launch_shinystan(model_P300_t0)




```{r}
library(loo)
loo1 <- loo(model_n2pc, save_psis = TRUE,k_threshold = 0.7)

loo2 <- loo(model_P300_t0, save_psis = TRUE, k_threshold = 0.7)

loo_compare(model_n2pc, model_P300_t0, criterion = "waic")


```

